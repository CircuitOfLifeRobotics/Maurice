// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3925.Maurice;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveLeftFront;
    public static SpeedController driveLeftBack;
    public static SpeedController driveRightFront;
    public static SpeedController driveRightBack;
    public static RobotDrive drivedrive;
    public static Relay feederfeederspike;
    public static SpeedController winchWinchTalon;
    public static DigitalInput winchwinchswitch;
    public static Relay turtleTailtailspike;
    public static DigitalInput turtleTailtailswitch;
    public static DoubleSolenoid feederArmarmsolenoid;
    public static Compressor feederArmcompressor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveLeftFront = new Victor(1, 2);
	LiveWindow.addActuator("Drive", "LeftFront", (Victor) driveLeftFront);
        
        driveLeftBack = new Victor(1, 1);
	LiveWindow.addActuator("Drive", "LeftBack", (Victor) driveLeftBack);
        
        driveRightFront = new Victor(1, 3);
	LiveWindow.addActuator("Drive", "RightFront", (Victor) driveRightFront);
        
        driveRightBack = new Victor(1, 4);
	LiveWindow.addActuator("Drive", "RightBack", (Victor) driveRightBack);
        
        drivedrive = new RobotDrive(driveLeftFront, driveLeftBack,
              driveRightFront, driveRightBack);
	
        drivedrive.setSafetyEnabled(true);
        drivedrive.setExpiration(0.1);
        drivedrive.setSensitivity(0.5);
        drivedrive.setMaxOutput(1.0);
        feederfeederspike = new Relay(1, 4);
	LiveWindow.addActuator("Feeder", "feederspike", feederfeederspike);
        
        winchWinchTalon = new Talon(1, 5);
	LiveWindow.addActuator("Winch", "WinchTalon", (Talon) winchWinchTalon);
        
        winchwinchswitch = new DigitalInput(1, 2);
	LiveWindow.addSensor("Winch", "winchswitch", winchwinchswitch);
        
        turtleTailtailspike = new Relay(1, 5);
	LiveWindow.addActuator("TurtleTail", "tailspike", turtleTailtailspike);
        
        turtleTailtailswitch = new DigitalInput(1, 3);
	LiveWindow.addSensor("TurtleTail", "tailswitch", turtleTailtailswitch);
        
        feederArmarmsolenoid = new DoubleSolenoid(1, 2, 1);      
	
        
        feederArmcompressor = new Compressor(1, 1, 1, 3);
	
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
